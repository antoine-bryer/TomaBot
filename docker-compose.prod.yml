# docker-compose.prod.yml
# Configuration overrides pour production

services:
  # TomaBot Application (Production)
  tomabot:
    container_name: tomabot-app
    image: ${DOCKER_USERNAME}/tomabot:${VERSION:-latest}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Spring
      SPRING_PROFILES_ACTIVE: prod

      # Discord
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}

      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}

      # JVM Options (production optimized)
      JAVA_OPTS: ${JAVA_OPTS:--Xmx512m -Xms512m -XX:+UseG1GC -XX:MaxGCPauseMillis=200}

    networks:
      - tomabot-network

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '1.0'
          memory: 512M

  # PostgreSQL (production)
  postgres:
    # No port exposure in production (security)
    ports: []
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  # Redis (production)
  redis:
    # No port exposure in production (security)
    ports: []
    command: >
      redis-server
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    volumes:
      - redis_data_prod:/data
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  # Adminer - DISABLED IN PRODUCTION
  adminer:
    profiles:
      - debug  # Only start with: docker-compose --profile debug up
    ports: []

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local